{"contributors":[],"created":"2025-05-29T22:58","description":"Please add bootstraps, accessible tools and methods here.","homepage":"","keywords":[["dribdat","hackathon","co-creation"]],"licenses":[{"name":"ODC-PDDL-1.0","path":"http://opendatacommons.org/licenses/pddl/","title":"Open Data Commons Public Domain Dedication & License 1.0"}],"name":"event-2","resources":[{"data":[{"aftersubmit":"","boilerplate":"Please add bootstraps, tools (if open source: [pull from the source!](https://climateaction.dribdat.cc/project/import/2)) and methods here.","certificate_path":"","community_embed":"<div class=\"codeofconduct\">All attendees, sponsors, partners, volunteers and staff at our hackathon are required to agree with the <a href=\"https://hackcodeofconduct.org/\" target=\"_blank\">Hack Code of Conduct</a>. Organisers will enforce this code throughout the event. We expect cooperation from all participants to ensure a safe environment for everybody.</div>\r\n\r\n<p class=\"creativecommons\">The contents of this website, unless otherwise stated, are licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\" target=\"_blank\">Creative Commons Attribution 4.0 International License</a>. The application that powers this site is available under the <a rel=\"sourcecode\" href=\"https://codeberg.org/dribdat/dribdat/src/branch/main/LICENSE\" target=\"_blank\">MIT license</a>.</p>\r\n","community_url":"","custom_css":"","description":"","ends_at":"2025-05-23T16:00","gallery_url":"","has_finished":true,"has_started":false,"hashtags":"","hostname":"","id":2,"instruction":"","location":"","location_lat":0.0,"location_lon":0.0,"logo_url":"","name":"Resources","starts_at":"2025-05-22T09:00","summary":"Please add bootstraps, accessible tools and methods here.","webpage_url":""}],"name":"events"},{"data":[{"autotext":"","autotext_url":"","category_id":"","category_name":"","contact_url":"","created_at":"2025-05-23T12:15","download_url":"","event_name":"Resources","event_url":"https://climateaction.dribdat.cc/event/2","excerpt":"","hashtag":"","id":9,"ident":null,"image_url":"","is_challenge":true,"is_webembed":false,"logo_color":"","logo_icon":"","longtext":"","maintainer":"loleg","name":"Climate Product Leaders Playbook","phase":"Challenge","progress":0,"score":0,"source_url":"","stats":{"commits":0,"during":0,"people":0,"sizepitch":0,"sizetotal":151,"total":0,"updates":0},"summary":"\r\n\r\n38 nature-positive best practices to enhance your product management skills and contribute to the fight against climate change and biodiversity crises.\r\n","team":"loleg","team_count":0,"updated_at":"2025-05-23T12:16","url":"https://climateaction.dribdat.cc/project/9","webpage_url":"https://climateproductleaders.org/playbook/"},{"autotext":"","autotext_url":"","category_id":"","category_name":"","contact_url":"mailto:sebastian@zeroheroes.ch","created_at":"2025-05-23T12:17","download_url":"","event_name":"Resources","event_url":"https://climateaction.dribdat.cc/event/2","excerpt":"\r\nDu willst dir f\u00fcr dein Unternehmen Klimaziele setzen, Nachhaltigkeit in der Unternehmensstrategie verankern und einen Netto-Null Absenkpfad erstellen? ZeroHeroes hilft dir mit einer Auslegeordnung in einem halbt\u00e4gigen Workshopformat gef\u00f6rdert vom BEKB Impulsprogramm.\u00a0Damit entstehen dir keine Kosten und du erh\u00e4ltst einen ersten Einstieg ins Thema. [Ein Flyer im Anhang](https://s3.dribdat.cc/clim/2025/1/7QLLG/TLMUQIA2.pdf) (PDF) beschreibt das Format. Melde dich gerne bei sebastian at zeroheroe...","hashtag":"","id":10,"ident":null,"image_url":"","is_challenge":true,"is_webembed":true,"logo_color":"","logo_icon":"","longtext":"\r\nDu willst dir f\u00fcr dein Unternehmen Klimaziele setzen, Nachhaltigkeit in der Unternehmensstrategie verankern und einen Netto-Null Absenkpfad erstellen? ZeroHeroes hilft dir mit einer Auslegeordnung in einem halbt\u00e4gigen Workshopformat gef\u00f6rdert vom BEKB Impulsprogramm.\u00a0Damit entstehen dir keine Kosten und du erh\u00e4ltst einen ersten Einstieg ins Thema. [Ein Flyer im Anhang](https://s3.dribdat.cc/clim/2025/1/7QLLG/TLMUQIA2.pdf) (PDF) beschreibt das Format. Melde dich gerne bei sebastian at zeroheroes.ch und wir kl\u00e4ren deine Fragen.\u00a0","maintainer":"loleg","name":"Circularity Deck","phase":"Challenge","progress":0,"score":0,"source_url":"","stats":{"commits":0,"during":4,"people":0,"sizepitch":531,"sizetotal":721,"total":4,"updates":4},"summary":"Developed by Jan Konietzko during his PhD research at Delft University of Technology. This tool is designed to make circular and sustainable business practices simple and easy to understand.","team":"loleg","team_count":0,"updated_at":"2025-05-23T12:20","url":"https://climateaction.dribdat.cc/project/10","webpage_url":"https://www.circularitydeck.com/"},{"autotext":"# CO2.js\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-21-orange.svg?style=flat-square)](https://raw.githubusercontent.com/thegreenwebfoundation/co2.js/main/#contributors-)\n\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n<img src=\"https://github.com/thegreenwebfoundation/co2.js/actions/workflows/unittests.yml/badge.svg\" />\n\nOne day, the internet will be powered by renewable energy. Until that day comes, there\u2019ll be a CO2 cost that comes with every byte of data that\u2019s uploaded or downloaded. By being able to calculate these emissions, developers can be empowered to create more efficient, lower carbon apps, websites, and software.\n\n## [Documentation](https://developers.thegreenwebfoundation.org/co2js/overview/) | [Changelog](/CHANGELOG.md) | [Roadmap](https://github.com/orgs/thegreenwebfoundation/projects/3/views/1)\n\n## What is CO2.js?\n\nCO2.js is a JavaScript library that enables developers a way to estimate the emissions related to use of their apps, websites, and software.\n\n## Why use it?\n\nBeing able to estimate the CO2 emissions associated with digital activities can be of benefit to both developers and users.\n\nInternally, you may want to use this library to create a _carbon budget_ for your site or app. It is also useful for inclusion in dashboards and monitoring tools.\n\nFor user facing applications, CO2.js could be used to check & block the uploading of carbon intensive files. Or, to present users with information about the carbon impact of their online activities (such as browsing a website).\n\nThe above are just a few examples of the many and varied ways CO2.js can be applied to provide carbon estimates for data transfer. If you\u2019re using CO2.js in production we\u2019d love to hear how! [Contact us](https://www.thegreenwebfoundation.org/support-form/) via our website.\n\n## Installation\n\n### Using NPM\n\nYou can install CO2.js as a dependency for your projects using NPM.\n\n```bash\nnpm install @tgwf/co2\n```\n\n### Using esm.sh\n\nYou can import the CO2.js library into projects using esm.sh.\n\n```js\nimport tgwf from \"https://esm.sh/@tgwf/co2@latest\";\n```\n\n## Using a JS CDN\n\nYou can get the latest version of CO2.js using one of the content delivery networks below.\n\n### jsDelivr\n\nYou can find the package at [https://www.jsdelivr.com/package/npm/@tgwf/co2](https://www.jsdelivr.com/package/npm/@tgwf/co2).\n\n- CommonJS compatible build `https://cdn.jsdelivr.net/npm/@tgwf/co2@latest/dist/cjs/index-node.min.js`\n- ES Modules compatible build `https://cdn.jsdelivr.net/npm/@tgwf/co2@latest/dist/esm/index.js`\n- IIFE compatible build `https://cdn.jsdelivr.net/npm/@tgwf/co2@latest/dist/iife/index.js`\n\n### Unpkgd\n\nYou can find the package at [https://unpkg.com/browse/@tgwf/co2@latest/](https://unpkg.com/browse/@tgwf/co2@latest/).\n\n- CommonJS compatible build `https://unpkg.com/@tgwf/co2@latest/dist/cjs/index-node.min.js`\n- ES Modules compatible build `https://unpkg.com/@tgwf/co2@latest/dist/esm/index.js`\n- IIFE compatible build `https://unpkg.com/@tgwf/co2@latest/dist/iife/index.js`\n\n### Build it yourself\n\nYou can also build the CO2.js library from the source code. To do this:\n\n1. Go to the [CO2.js repository](https://github.com/thegreenwebfoundation/co2.js) on GitHub.\n1. Clone or fork the repository.\n1. Navigate to the folder on your machine and run `npm run build` in your terminal.\n1. Once the build has finished running, you will find a `/dist` folder has been created. Inside you can find:\n\n   - `dist/cjs` - A CommonJS compatible build.\n   - `dist/esm` - An ES Modules compatible build.\n   - `dist/iife` - An Immediately Invoked Function Expression (IIFE) version of the library.\n\n## TypeScript support\n\nType definitions for CO2.js are [published in the DefinitelyTyped project](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/tgwf__co2), and are [available on NPM](https://www.npmjs.com/package/@types/tgwf__co2) at `@types/tgwf__co2`.\n\nIf you want to use type definitions in your project, they should be installed as a devDependency.\n\n`npm install --dev @types/tgwf__co2`\n\n## Marginal and average emissions intensity data\n\nCO2.js includes yearly average grid intensity data from [Ember](https://ember-climate.org/data/data-explorer/), as well as marginal intensity data from the [UNFCCC](https://unfccc.int/) (United Nations Framework Convention on Climate Change). You can find the data in JSON and CommonJS Module format in the `data/output` folder.\n\n### Using emissions intensity data\n\nYou can import annual, country-level marginal or average grid intensity data into your projects directly from CO2.js. For example, if we wanted to use the average grid intensity for Australia in our project, we could use the code below:\n\n```js\nimport { averageIntensity } from \"@tgwf/co2\";\nconst { data } = averageIntensity;\nconst { AUS } = data;\nconsole.log({ AUS });\n```\n\nAll countries are represented by their respective [Alpha-3 ISO country code](https://www.iso.org/obp/ui/#search).\n\n## Publishing to NPM\n\nWe use [`np`](https://www.npmjs.com/package/np) to publish new versions of this library to NPM. To do this:\n\n1. First login to NPM by running the `npm login` command in your terminal.\n2. Then run `npx np <VERSION>`.\n3. `np` will run several automated steps to publish the new package to NPM.\n4. If everything runs successfully, you can then add release notes to GitHub for the newly published package.\n\n## Release communication\n\nCO2.js releases will be communicated through the following channels:\n\n| Channel                                                                                         | Minor Release (0.xx) | Patch Release (0.xx.x) |\n| ----------------------------------------------------------------------------------------------- | -------------------- | ---------------------- |\n| [Github](https://github.com/thegreenwebfoundation/co2.js/releases)                              | \u2705                   | \u2705                     |\n| [Green Web Foundation website](https://www.thegreenwebfoundation.org/co2-js/#releases)          | \u2705                   | \u274c                     |\n| W3C Slack Sustainability Channel                                                                | \u2705                   | \u274c                     |\n| ClimateAction.Tech Slack                                                                        | \u2705                   | \u274c                     |\n| [Green Web Foundation LinkedIn Account](https://www.linkedin.com/company/green-web-foundation/) | \u2705                   | \u274c                     |\n\n## Licenses\n\nThe code for CO2.js is licensed Apache 2.0. ([What does this mean?](<https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)>))\n\nThe average carbon intensity data from Ember is published under the Creative Commons ShareAlike Attribution Licence ([CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)). ([What does this mean?](https://www.tldrlegal.com/license/creative-commons-attribution-share-alike-cc-sa))\n\nThe marginal intensity data is published by the Green Web Foundation, under the Creative Commons ShareAlike Attribution Licence ([CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)). ([What does this mean?](https://www.tldrlegal.com/license/creative-commons-attribution-share-alike-cc-sa))\n\nSee LICENCE for more.\n\n## Contributors\n\nTo contribute changes back to this project, please follow the steps outlined in the [CONTRIBUTING.md](/CONTRIBUTING.md) file in this repository.\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mrchrisadams\"><img src=\"https://avatars.githubusercontent.com/u/17906?v=4?s=100\" width=\"100px;\" alt=\"Chris Adams\"/><br /><sub><b>Chris Adams</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=mrchrisadams\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.fershad.com/\"><img src=\"https://avatars.githubusercontent.com/u/27988517?v=4?s=100\" width=\"100px;\" alt=\"fershad\"/><br /><sub><b>fershad</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=fershad\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=fershad\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#maintenance-fershad\" title=\"Maintenance\">\ud83d\udea7</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.peterhedenskog.com/\"><img src=\"https://avatars.githubusercontent.com/u/540757?v=4?s=100\" width=\"100px;\" alt=\"Peter Hedenskog\"/><br /><sub><b>Peter Hedenskog</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=soulgalore\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.drydenwilliams.co.uk/\"><img src=\"https://avatars.githubusercontent.com/u/4403089?v=4?s=100\" width=\"100px;\" alt=\"Dryden\"/><br /><sub><b>Dryden</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=drydenwilliams\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://evanhahn.com/\"><img src=\"https://avatars.githubusercontent.com/u/777712?v=4?s=100\" width=\"100px;\" alt=\"Evan Hahn\"/><br /><sub><b>Evan Hahn</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=EvanHahn\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=EvanHahn\" title=\"Tests\">\u26a0\ufe0f</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/PrathumP\"><img src=\"https://avatars.githubusercontent.com/u/115390367?v=4?s=100\" width=\"100px;\" alt=\"Prathum Pandey\"/><br /><sub><b>Prathum Pandey</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/issues?q=author%3APrathumP\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=PrathumP\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Fdawgs\"><img src=\"https://avatars.githubusercontent.com/u/43814140?v=4?s=100\" width=\"100px;\" alt=\"Frazer Smith\"/><br /><sub><b>Frazer Smith</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=Fdawgs\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=Fdawgs\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hamishfagg\"><img src=\"https://avatars.githubusercontent.com/u/895845?v=4?s=100\" width=\"100px;\" alt=\"Hamish Fagg\"/><br /><sub><b>Hamish Fagg</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=hamishfagg\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://portfolio.toolness.org/\"><img src=\"https://avatars.githubusercontent.com/u/124687?v=4?s=100\" width=\"100px;\" alt=\"Atul Varma\"/><br /><sub><b>Atul Varma</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=toolness\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.intersectionalenvironmentalist.com/\"><img src=\"https://avatars.githubusercontent.com/u/1530684?v=4?s=100\" width=\"100px;\" alt=\"Piper\"/><br /><sub><b>Piper</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=piperchester\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://vasquezruiz.com/\"><img src=\"https://avatars.githubusercontent.com/u/108420?v=4?s=100\" width=\"100px;\" alt=\"Raymundo V\u00e1squez Ruiz\"/><br /><sub><b>Raymundo V\u00e1squez Ruiz</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=raymundovr\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://greengumption.co.uk/\"><img src=\"https://avatars.githubusercontent.com/u/26165947?v=4?s=100\" width=\"100px;\" alt=\"JamieB\"/><br /><sub><b>JamieB</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=JamieBeevor\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/p-gerard\"><img src=\"https://avatars.githubusercontent.com/u/97036756?v=4?s=100\" width=\"100px;\" alt=\"p-gerard\"/><br /><sub><b>p-gerard</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/issues?q=author%3Ap-gerard\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=p-gerard\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sfishel18\"><img src=\"https://avatars.githubusercontent.com/u/294695?v=4?s=100\" width=\"100px;\" alt=\"Simon Fishel\"/><br /><sub><b>Simon Fishel</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=sfishel18\" title=\"Code\">\ud83d\udcbb</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/dsubject\"><img src=\"https://avatars.githubusercontent.com/u/33845418?s=64&v=4?s=100\" width=\"100px;\" alt=\"Dani Subject\"/><br /><sub><b>Dani Subject</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=dsubject\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Malay-dev\"><img src=\"https://avatars.githubusercontent.com/u/91375797?s=64&v=4?s=100\" width=\"100px;\" alt=\"Malay Kumar\"/><br /><sub><b>Malay Kumar</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=Malay-dev\" title=\"Documentation\">\ud83d\udcd6</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/samuelIkoli\"><img src=\"https://avatars.githubusercontent.com/u/98848723?v=4?s=100\" width=\"100px;\" alt=\"Samuel Ikoli\"/><br /><sub><b>Samuel Ikoli</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=samuelIkoli\" title=\"Documentation\">\ud83d\udcd6</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/APJohns\"><img src=\"https://avatars.githubusercontent.com/u/18357173?v=4?s=100\" width=\"100px;\" alt=\"Ash Johns\"/><br /><sub><b>Ash Johns</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/issues?q=author%3AAPJohns\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=APJohns\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mgriffin-scottlogic\"><img src=\"https://avatars.githubusercontent.com/u/117279304?v=4?s=100\" width=\"100px;\" alt=\"Matthew Griffin\"/><br /><sub><b>Matthew Griffin</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=mgriffin-scottlogic\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=mgriffin-scottlogic\" title=\"Code\">\ud83d\udcbb</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hanopcan\"><img src=\"https://avatars.githubusercontent.com/u/11687898?v=4?s=100\" width=\"100px;\" alt=\"Hannah\"/><br /><sub><b>Hannah</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=hanopcan\" title=\"Documentation\">\ud83d\udcd6</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/alexzurbonsen\"><img src=\"https://avatars.githubusercontent.com/u/82914459?v=4?s=100\" width=\"100px;\" alt=\"Alex\"/><br /><sub><b>Alex</b></sub></a><br /><a href=\"https://github.com/thegreenwebfoundation/co2.js/commits?author=alexzurbonsen\" title=\"Code\">\ud83d\udcbb</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n","autotext_url":"https://github.com/thegreenwebfoundation/co2.js/","category_id":"","category_name":"","contact_url":"https://github.com/thegreenwebfoundation/co2.js/issues","created_at":"2025-05-23T12:22","download_url":"https://github.com/thegreenwebfoundation/co2.js/releases","event_name":"Resources","event_url":"https://climateaction.dribdat.cc/event/2","excerpt":"# CO2.js\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-21-orange.svg?style=flat-square)](https://raw.githubusercontent.com/thegreenwebfoundation/co2.js/main/#contributors-)\n\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n<img src=\"https://github.com/thegreenwebfoundation/co2.js/actions/workflows/unittests.yml/badge.svg\" />\n\nOne day, the internet will be powered by renewable energy. Until that day comes, the...","hashtag":"","id":11,"ident":"","image_url":"https://avatars.githubusercontent.com/u/8995024?v=4","is_challenge":true,"is_webembed":false,"logo_color":"","logo_icon":"","longtext":"","maintainer":"loleg","name":"CO2.js","phase":"Challenge","progress":0,"score":0,"source_url":"https://github.com/thegreenwebfoundation/co2.js","stats":{"commits":0,"during":1,"people":0,"sizepitch":0,"sizetotal":16266,"total":1,"updates":1},"summary":"An npm module for accessing the green web API, and estimating the carbon emissions from using digital services","team":"loleg","team_count":0,"updated_at":"2025-05-23T12:22","url":"https://climateaction.dribdat.cc/project/11","webpage_url":"https://developers.thegreenwebfoundation.org/"},{"autotext":"[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n\n# Business Rules Engine\n\nZEN Engine is a cross-platform, Open-Source Business Rules Engine (BRE). It is written in **Rust** and provides native\nbindings for **NodeJS**, **Python** and **Go**. ZEN Engine allows to load and\nexecute [JSON Decision Model (JDM)](https://gorules.io/docs/rules-engine/json-decision-model) from JSON files.\n\n<img width=\"800\" alt=\"Open-Source Rules Engine\" src=\"https://gorules.io/images/jdm-editor.gif\">\n\nAn open-source React editor is available on our [JDM Editor](https://github.com/gorules/jdm-editor) repo.\n\n## Usage\n\nZEN Engine is built as embeddable BRE for your **Rust**, **NodeJS**, **Python** or **Go** applications.\nIt parses JDM from JSON content. It is up to you to obtain the JSON content, e.g. from file system, database or service\ncall.\n\n### Supported Platforms\n\nList of platforms where Zen Engine is natively available:\n\n* **NodeJS** - [GitHub](https://github.com/gorules/zen/blob/master/bindings/nodejs/README.md) | [Documentation](https://gorules.io/docs/developers/bre/engines/nodejs) | [npmjs](https://www.npmjs.com/package/@gorules/zen-engine)\n* **Python** - [GitHub](https://github.com/gorules/zen/blob/master/bindings/python/README.md) | [Documentation](https://gorules.io/docs/developers/bre/engines/python) | [pypi](https://pypi.org/project/zen-engine/)\n* **Go** - [GitHub](https://github.com/gorules/zen-go) | [Documentation](https://gorules.io/docs/developers/bre/engines/go)\n* **Rust (Core)** - [GitHub](https://github.com/gorules/zen) | [Documentation](https://gorules.io/docs/developers/bre/engines/rust) | [crates.io](https://crates.io/crates/zen-engine)\n\nFor a complete **Business Rules Management Systems (BRMS)** solution:\n\n* [Self-hosted BRMS](https://gorules.io)\n* [GoRules Cloud BRMS](https://gorules.io/signin/verify-email)\n\n### Rust\n\n```toml\n[dependencies]\nzen-engine = \"0\"\n```\n\n```rust\nuse serde_json::json;\nuse zen_engine::DecisionEngine;\nuse zen_engine::model::DecisionContent;\n\nasync fn evaluate() {\n    let decision_content: DecisionContent = serde_json::from_str(include_str!(\"jdm_graph.json\")).unwrap();\n    let engine = DecisionEngine::default();\n    let decision = engine.create_decision(decision_content.into());\n\n    let result = decision.evaluate(&json!({ \"input\": 12 })).await;\n}\n```\n\nFor more advanced use cases visit [Rust Docs](https://gorules.io/docs/developers/bre/engines/rust).\n\n## JSON Decision Model (JDM)\n\nGoRules JDM (JSON Decision Model) is a modeling framework designed to streamline the representation and implementation\nof decision models.\n\n#### Understanding GoRules JDM\n\nAt its core, GoRules JDM revolves around the concept of decision models as interconnected graphs stored in JSON format.\nThese graphs capture the intricate relationships between various decision points, conditions, and outcomes in a GoRules\nZen-Engine.\n\nGraphs are made by linking nodes with edges, which act like pathways for moving information from one node to another,\nusually from the left to the right.\n\nThe Input node serves as an entry for all data relevant to the context, while the Output nodes produce the result of\ndecision-making process. The progression of data follows a path from the Input Node to the Output Node, traversing all\ninterconnected nodes in between. As the data flows through this network, it undergoes evaluation at each node, and\nconnections determine where the data is passed along the graph.\n\nTo see JDM Graph in action you can use [Free Online Editor](https://editor.gorules.io) with built in Simulator.\n\nThere are 5 main node types in addition to a graph Input Node (Request) and Output Node (Response):\n\n* Decision Table Node\n* Switch Node\n* Function Node\n* Expression Node\n* Decision Node\n\n### Decision Table Node\n\n#### Overview\n\nTables provide a structured representation of decision-making processes, allowing developers and business users to\nexpress complex rules in a clear and concise manner.\n\n<img width=\"960\" alt=\"Decision Table\" src=\"https://gorules.io/images/decision-table.png\">\n\n#### Structure\n\nAt the core of the Decision Table is its schema, defining the structure with inputs and outputs. Inputs encompass\nbusiness-friendly expressions using the ZEN Expression Language, accommodating a range of conditions such as equality,\nnumeric comparisons, boolean values, date time functions, array functions and more. The schema's outputs dictate the\nform of results generated by the Decision Table.\nInputs and outputs are expressed through a user-friendly interface, often resembling a spreadsheet. This facilitates\neasy modification and addition of rules, enabling business users to contribute to decision logic without delving into\nintricate code.\n\n#### Evaluation Process\n\nDecision Tables are evaluated row by row, from top to bottom, adhering to a specified hit policy.\nSingle row is evaluated via Inputs columns, from left to right. Each input column represents `AND` operator. If cell is\nempty that column is evaluated **truthfully**, independently of the value.\n\nIf a single cell within a row fails (due to error, or otherwise), the row is skipped.\n\n**HitPolicy**\n\nThe hit policy determines the outcome calculation based on matching rules.\n\nThe result of the evaluation is:\n\n* **an object** if the hit policy of the decision table is `first` and a rule matched. The structure is defined by the\n  output fields. Qualified field names with a dot (.) inside lead to nested objects.\n* **`null`/`undefined`** if no rule matched in `first` hit policy\n* **an array of objects** if the hit policy of the decision table is `collect` (one array item for each matching rule)\n  or empty array if no rules match\n\n#### Inputs\n\nIn the assessment of rules or rows, input columns embody the `AND` operator. The values typically consist of (qualified)\nnames, such as `customer.country` or `customer.age`.\n\nThere are two types of evaluation of inputs, `Unary` and `Expression`.\n\n**Unary Evaluation**\n\nUnary evaluation is usually used when we would like to compare single fields from incoming context separately, for\nexample `customer.country` and `cart.total` . It is activated when a column has `field` defined in its schema.\n\n***Example***\n\nFor the input:\n\n```json\n{\n  \"customer\": {\n    \"country\": \"US\"\n  },\n  \"cart\": {\n    \"total\": 1500\n  }\n}\n```\n\n<img width=\"960\" alt=\"Decision Table Unary Test\" src=\"https://gorules.io/images/decision-table.png\">\n\nThis evaluation translates to\n\n```\nIF customer.country == 'US' AND cart.total > 1000 THEN {\"fees\": {\"percent\": 2}}\nELSE IF customer.country == 'US' THEN {\"fees\": {\"flat\": 30}}\nELSE IF customer.country == 'CA' OR customer.country == 'MX' THEN {\"fees\": {\"flat\": 50}}\nELSE {\"fees\": {\"flat\": 150}}\n```\n\nList shows basic example of the unary tests in the Input Fields:\n\n| Input entry | Input Expression                               |\n|-------------|------------------------------------------------|\n| \"A\"         | the field equals \"A\"                           |\n| \"A\", \"B\"    | the field is either \"A\" or \"B\"                 |\n| 36          | the numeric value equals 36                    |\n| < 36        | a value less than 36                           |\n| > 36        | a value greater than 36                        |\n| [20..39]    | a value between 20 and 39 (inclusive)          |\n| 20,39       | a value either 20 or 39                        |\n| <20, >39    | a value either less than 20 or greater than 39 |\n| true        | the boolean value true                         |\n| false       | the boolean value false                        |\n|             | any value, even null/undefined                 |\n| null        | the value null or undefined                    |\n\nNote: For the full list please\nvisit [ZEN Expression Language](https://gorules.io/docs/rules-engine/expression-language/).\n\n**Expression Evaluation**\n\nExpression evaluation is used when we would like to create more complex evaluation logic inside single cell. It allows\nus to compare multiple fields from the incoming context inside same cell.\n\nIt can be used by providing an empty `Selector (field)` inside column configuration.\n\n***Example***\n\nFor the input:\n\n```json\n{\n  \"transaction\": {\n    \"country\": \"US\",\n    \"createdAt\": \"2023-11-20T19:00:25Z\",\n    \"amount\": 10000\n  }\n}\n```\n\n<img width=\"960\" alt=\"Decision Table Expression\" src=\"https://gorules.io/images/decision-table-expression.png\">\n\n```\nIF time(transaction.createdAt) > time(\"17:00:00\") AND transaction.amount > 1000 THEN {\"status\": \"reject\"}\nELSE {\"status\": \"approve\"}\n```\n\nNote: For the full list please\nvisit [ZEN Expression Language](https://gorules.io/docs/rules-engine/expression-language/).\n\n**Outputs**\n\nOutput columns serve as the blueprint for the data that the decision table will generate when the conditions are met\nduring evaluation.\n\nWhen a row in the decision table satisfies its specified conditions, the output columns determine the nature and\nstructure of the information that will be returned. Each output column represents a distinct field, and the collective\nset of these fields forms the output or result associated with the validated row. This mechanism allows decision tables\nto precisely define and control the data output.\n\n***Example***\n\n<img width=\"860\" alt=\"Decision Table Output\" src=\"https://gorules.io/images/decision-table-output.png\">\n\nAnd the result would be:\n\n```json\n{\n  \"flatProperty\": \"A\",\n  \"output\": {\n    \"nested\": {\n      \"property\": \"B\"\n    },\n    \"property\": 36\n  }\n}\n```\n\n### Switch Node (NEW)\n\nThe Switch node in GoRules JDM introduces a dynamic branching mechanism to decision models, enabling the graph to\ndiverge based on conditions.\n\nConditions are written in a Zen Expression Language.\n\nBy incorporating the Switch node, decision models become more flexible and context-aware. This capability is\nparticularly valuable in scenarios where diverse decision logic is required based on varying inputs. The Switch node\nefficiently manages branching within the graph, enhancing the overall complexity and realism of decision models in\nGoRules JDM, making it a pivotal component for crafting intelligent and adaptive systems.\n\nThe Switch node preserves the incoming data without modification; it forwards the entire context to the output branch(\nes).\n\n<img width=\"960\" alt=\"Switch / Branching\" src=\"https://gorules.io/images/decision-graph.png\">\n\n#### HitPolicy\n\nThere are two HitPolicy options for the switch node, `first` and `collect`.\n\nIn the context of a first hit policy, the graph branches to the initial matching condition, analogous to the behavior\nobserved in a table. Conversely, under a collect hit policy, the graph extends to all branches where conditions hold\ntrue, allowing branching to multiple paths.\n\nNote: If there are multiple edges from the same condition, there is no guaranteed order of execution.\n\n*Available from:*\n\n* Python 0.16.0\n* NodeJS 0.13.0\n* Rust 0.16.0\n* Go 0.1.0\n\n### Functions Node\n\nFunction nodes are JavaScript snippets that allow for quick and easy parsing, re-mapping or otherwise modifying the data\nusing JavaScript. Inputs of the node are provided as function's arguments. Functions are executed on top of QuickJS\nEngine that is bundled into the ZEN Engine.\n\nFunction timeout is set to a 50ms.\n\n```js\nconst handler = (input, {dayjs, Big}) => {\n    return {\n        ...input,\n        someField: 'hello'\n    };\n};\n```\n\nThere are two built in libraries:\n\n* [dayjs](https://www.npmjs.com/package/dayjs) - for Date Manipulation\n* [big.js](https://www.npmjs.com/package/big.js) - for arbitrary-precision decimal arithmetic.\n\n### Expression Node\n\nThe Expression node serves as a tool for transforming input objects into alternative objects using the Zen Expression\nLanguage. When specifying the output properties, each property requires a separate row. These rows are defined by two\nfields:\n\n- Key - qualified name of the output property\n- Value - value expressed through the Zen Expression Language\n\nNote: Any errors within the Expression node will bring the graph to a halt.\n\n<img width=\"960\" alt=\"Decision Table\" src=\"https://gorules.io/images/expression.png\">\n\n### Decision Node\n\nThe \"Decision\" node is designed to extend the capabilities of decision models. Its function is to invoke and reuse other\ndecision models during execution.\n\nBy incorporating the \"Decision\" node, developers can modularize decision logic, promoting reusability and\nmaintainability in complex systems.\n\n## Support matrix\n\n| Arch            | Rust               | NodeJS             | Python             | Go                 |\n|:----------------|:-------------------|:-------------------|:-------------------|:-------------------|\n| linux-x64-gnu   | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| linux-arm64-gnu | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| darwin-x64      | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| darwin-arm64    | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| win32-x64-msvc  | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| linux-x64-musl  | :x:                | :heavy_check_mark: | :x:                | :x:                |\n| linux-arm64-musl| :x:                | :heavy_check_mark: | :x:                | :x:                |\n\n## Contribution\n\nJDM standard is growing and we need to keep tight control over its development and roadmap as there are number of\ncompanies that are using GoRules Zen-Engine and GoRules BRMS.\nFor this reason we can't accept any code contributions at this moment, apart from help with documentation and additional\ntests.\n\n## License\n\n[MIT License]()\n","autotext_url":"https://github.com/gorules/zen","category_id":"","category_name":"","contact_url":"https://github.com/gorules/zen/issues","created_at":"2025-05-23T14:54","download_url":"https://github.com/gorules/zen/releases","event_name":"Resources","event_url":"https://climateaction.dribdat.cc/event/2","excerpt":"GoRules is an open source (MIT licensed) rule engine that was briefly explored in a 2025 hackathon project:\r\n\r\nhttps://climateaction.dribdat.cc/project/3","hashtag":"","id":12,"ident":null,"image_url":"https://avatars.githubusercontent.com/u/110114556?v=4","is_challenge":true,"is_webembed":false,"logo_color":"","logo_icon":"","longtext":"GoRules is an open source (MIT licensed) rule engine that was briefly explored in a 2025 hackathon project:\r\n\r\nhttps://climateaction.dribdat.cc/project/3","maintainer":"loleg","name":"GoRules","phase":"Challenge","progress":0,"score":0,"source_url":"https://github.com/gorules/zen","stats":{"commits":6,"during":9,"people":0,"sizepitch":153,"sizetotal":14001,"total":9,"updates":9},"summary":"Open-source Business Rules Engine for your Rust, NodeJS, Python or Go applications.","team":"loleg","team_count":0,"updated_at":"2025-05-23T14:55","url":"https://climateaction.dribdat.cc/project/12","webpage_url":"https://gorules.io"}],"name":"projects"}],"sources":[{"path":"https://climateaction.dribdat.cc/","title":"dribdat"}],"title":"Resources","version":"0.9.1"}
